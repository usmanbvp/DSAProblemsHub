// Program to check if given string of parenthesis are valid or not

#include <iostream>
#include <stack>
using namespace std;

// Function to check if characters 'a' and 'b' form a pair, i.e., {} or [] or ()
bool isPair(char a, char b) {
    return (a=='(' && b==')') || (a=='{' && b=='}') || (a=='[' && b==']');
}

// Function to validate if the input string contains valid pairs of brackets
bool isValid(string s) {
    stack<char>st; // Initialize a stack to store opening brackets
    for(int i=0;i<s.length();i++) {
        char t = s[i];

        // If the current character is an opening bracket, push it onto the stack
        if(t=='(' || t=='{' || t=='[') {
            st.push(t);
        } else if(!st.empty()) {

            // Check if the current character forms a valid pair with the top of the stack
            if(isPair(st.top(), t)) {
                st.pop();
            } else return false;
        } else {
            return false;
        }
    }
    return st.empty(); // Check if there are any remaining opening brackets without pairs
}

int main()
{
    string s = "{()[]}";
    cout<<isValid(s);

    return 0;
}
